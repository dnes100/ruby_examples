c
1.to_s.rjust 10
1.rjust 10
"%10a %" % "ddd" 
"%10s %" % "ddd" 
"%10s %"
"%.2f" % 31.2
"%.2f" % 3
2.4
1/2.0 * 100
1/2 * 100
1/2
"--------------------".size
c
system_calls.values.map(&:[:time]).sum
system_calls.values.map(&:time).sum
system_calls.values
system_calls.keys
system_calls
c
system_calls.values
system_calls.each {|k,v|p v}
system_calls.each {|k,v|p k}
system_calls.keys
total_time
exit
c
system_calls[:thread_selfid]
system_calls[name]
system_calls[:name]
system_calls.keys
n
system_calls[:thread_selfid]
system_calls
n
name
system_calls[name]
system_calls
name
n
time
n
array
n
item.strip.split(" ")
item.strip.spit(" ")
item
c
raw_system_calls
system_calls
c
output.scan(/\n\s+\d+ \w+(?=\()/)
output.scan(/\n\s\d+ \w+(?=\()/)
raw_system_calls
output
c
`sudo dtruss -e ls 2>&1`
output
c
output
splitted.last
splitted.length
raw_system_calls
total_time
c
Hash.new({time: 0, count: 0})[:a]
Hash.new({time: 0, count: 0})
"" || 1
" " || 1
" "
 " ".present?
system_calls.scan(/\s\d+\s\w+/)
system_calls.scan(/\s\d+\s\w?/)
system_calls.match(/\s\d+\s\w?/)
system_calls
c
output.split(/ELAPSD.*SYSCALL.*return/)[1].strip.split("\n")
output.split(/ELAPSD.*SYSCALL.*return/)[1].strip
output.split(/ELAPSD.*SYSCALL.*return/)[1]
output.split(/ELAPSD.*SYSCALL.*return/).last
output.split(/ELAPSD.*SYSCALL.*return/).second
output.split(/ELAPSD.*SYSCALL.*return/).first.strip.split("\n")
output.split(/ELAPSD.*SYSCALL.*return/).first.strip.split('\n')
output.split(/ELAPSD.*SYSCALL.*return/).first.strip
output.split(/ELAPSD.*SYSCALL.*return/).first.trim
output.split(/ELAPSD.*SYSCALL.*return/).first
output.split(/ELAPSD.*SYSCALL.*return/)
output.split(/ELAPSD.*SYSCALL.*return/).count
output.split("/ELAPSD.*SYSCALL.*return/").count
output.split("/ELAPSD.*SYSCALL.*return/")
output
c
output
c
exit
output.split("ELAPSD").last.split("\n").first
output.split("ELAPSD").last.split("\n")
output.split("ELAPSD").last
output.split("ELAPSD").first
output.split("ELAPSD").count
output.split("ELAPSD")
output.split("\n").first
output.split("\n")
output.class
output
c
output
c
output.class
output
c
output
n
exit
command
output
a
exit
command
output
exit
output
exit
Glass.hi
GlassBottle.hi
gb.class.hi
gb.hi
